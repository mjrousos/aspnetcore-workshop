services.AddSwaggerGen(c => c.SwaggerDoc("v1", new Info { Title = "My API", Version = "v1" }));
-------------------------------------------------------------------------------
app.UseSwagger();
app.UseSwaggerUI(c => c.SwaggerEndpoint("/swagger/v1/swagger.json", "My API V1"));
-------------------------------------------------------------------------------
public class Product
{
    public int Id { get; set; }
    public string Name { get; set; }
}
-------------------------------------------------------------------------------
[Route("/api/[controller]")]
public class ProductsController
{
    [HttpGet]
    public string Get() => "Hello World";
}
-------------------------------------------------------------------------------
private static List<Product> _products = new List<Product>(new[] {
    new Product() { Id = 1, Name = "Computer" },
    new Product() { Id = 2, Name = "Radio" },
    new Product() { Id = 3, Name = "Apple" },
});
-------------------------------------------------------------------------------
[HttpGet]
public IEnumerable<Product> Get()
{
    return _products;
}
-------------------------------------------------------------------------------
[HttpGet("{id}")]
public Product Get(int id)
{
    return _products.SingleOrDefault(p => p.Id == id);
}
-------------------------------------------------------------------------------
[HttpGet("{id}")]
public IActionResult Get(int id)
{
    var product = _products.SingleOrDefault(p => p.Id == id);

    if (product == null)
    {
        return NotFound();
    }

    return Ok(product);
}
-------------------------------------------------------------------------------
[HttpPost]
public void Post([FromBody]Product product)
{
    _products.Add(product);
}
-------------------------------------------------------------------------------
[HttpPost]
public IActionResult Post([FromBody]Product product)
{
    _products.Add(product);
    return CreatedAtAction(nameof(Get), new { id = product.Id }, product);
}
-------------------------------------------------------------------------------
if (!ModelState.IsValid)
{
    return BadRequest();
}
-------------------------------------------------------------------------------
if (!ModelState.IsValid)
{
    return BadRequest(ModelState);
}
-------------------------------------------------------------------------------
services.AddMvc()
    .AddXmlDataContractSerializerFormatters();
-------------------------------------------------------------------------------
[Produces("application/json")]