.UseUrls("http://0.0.0.0:8081")
-------------------------------------------------------------------------------
public static IWebHost BuildWebHost(string[] args) =>
    new WebHostBuilder()
        .Build(); 
-------------------------------------------------------------------------------
.UseKestrel()
-------------------------------------------------------------------------------
.UseContentRoot(Directory.GetCurrentDirectory())
-------------------------------------------------------------------------------
.ConfigureAppConfiguration(SetupAppConfiguration)
-------------------------------------------------------------------------------
private static void SetupAppConfiguration(WebHostBuilderContext context, IConfigurationBuilder configBuilder)
{
    var env = context.HostingEnvironment;

    configBuilder.AddJsonFile("appsettings.json", optional: false, reloadOnChange: true);
    configBuilder.AddJsonFile($"appsettings.{env.EnvironmentName}.json", optional: true, reloadOnChange: true);

    if (env.IsDevelopment())
    {
        configBuilder.AddUserSecrets<Program>(true);
    }

    configBuilder.AddEnvironmentVariables();
}
-------------------------------------------------------------------------------
.ConfigureLogging(SetupAppLogging)
-------------------------------------------------------------------------------
private static void SetupAppLogging(WebHostBuilderContext context, ILoggingBuilder loggingBuilder)
{
    loggingBuilder.AddConfiguration(context.Configuration.GetSection("Logging"));
    loggingBuilder.AddConsole();
    loggingBuilder.AddDebug();
}    
-------------------------------------------------------------------------------
.UseUrls("http://0.0.0.0:8081")
.UseIISIntegration()
.UseStartup<Startup>()
-------------------------------------------------------------------------------
app.UseStaticFiles();
-------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title></title>
</head>
<body>
    <h1>Hello from ASP.NET Core!</h1>
</body>
</html>
-------------------------------------------------------------------------------
"Logging": {
    "IncludeScopes": false,
    "LogLevel": {
    "Default": "Warning"
    }
}
-------------------------------------------------------------------------------
"StoreSettings": {
    "StoreName": "My Store",
    "StoreID": 1234,
    "Settings": {
        "Setting1": {
            "Value": "Hello!",
            "Enabled": true
        },
        "Setting2": {
            "Value": "Goodbye!",
            "Enabled": false
        }
    }
}
-------------------------------------------------------------------------------
public class StoreSettingsOptions
{
    public string StoreName { get; set; }
    public int StoreID { get; set; }
    public Dictionary<string, StoreSetting> Settings { get; set; }
}

public class StoreSetting
{
    public string Value { get; set; }
    public bool Enabled { get; set; }
}
-------------------------------------------------------------------------------
services.Configure<StoreSettingsOptions>(Configuration.GetSection("StoreSettings"));
-------------------------------------------------------------------------------
[Route("/api/[controller]")]
-------------------------------------------------------------------------------
private StoreSettingsOptions _settings;

public SettingsController(IOptions<StoreSettingsOptions> settingsOptions)
{
    _settings = settingsOptions?.Value;
} 
-------------------------------------------------------------------------------
[HttpGet]
public IActionResult Index()
{
    return Ok(new
    {
        Name = _settings.StoreName,
        ID = _settings.StoreID,
        Settings = _settings.Settings
                    .Where(s => s.Value.Enabled)
    });
}